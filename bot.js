const { Telegraf } = require('telegraf');
const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const bot = new Telegraf(process.env.BOT_TOKEN);
const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_ANON_KEY);

const WEB_APP_URL = process.env.WEB_APP_URL || 'https://next-mile-app.vercel.app';

// /start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ web_app-–∫–Ω–æ–ø–∫–∞
bot.start((ctx) => {
  ctx.reply('üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ NextMile! –û—Ç–∫—Ä–æ–π—Ç–µ –¥–∞—à–±–æ—Ä–¥ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:', {
    reply_markup: {
      inline_keyboard: [[
        { text: '–û—Ç–∫—Ä—ã—Ç—å NextMile', web_app: { url: WEB_APP_URL } }
      ]]
    }
  });
});

// /dashboard ‚Äî –∑–∞–≥–ª—É—à–∫–∞ (–ø—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Supabase)
bot.command('dashboard', async (ctx) => {
  const telegramId = ctx.from.id;
  // –ü—Ä–∏–º–µ—Ä: –∏—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ telegram_id (—Ç–∞–±–ª–∏—Ü–∞ users –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ Supabase)
  const { data: user, error } = await supabase
    .from('users')
    .select('*')
    .eq('telegram_id', telegramId)
    .single();
  if (error || !user) {
    ctx.reply('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ WebApp!');
    return;
  }
  ctx.reply(`–í–∞—à –¥–∞—à–±–æ—Ä–¥ (–∑–∞–≥–ª—É—à–∫–∞):\n–ò–º—è: ${user.name || '‚Äî'}\nID: ${user.id}`);
});

// /help ‚Äî –∫—Ä–∞—Ç–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞
bot.help((ctx) => {
  ctx.reply('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start ‚Äî –æ—Ç–∫—Ä—ã—Ç—å WebApp\n/dashboard ‚Äî –≤–∞—à –¥–∞—à–±–æ—Ä–¥');
});

bot.launch();
console.log('NextMileBot –∑–∞–ø—É—â–µ–Ω!'); 